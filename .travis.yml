sudo: true
notifications:
  slack:
    rooms:
      secure: Q/dBFI5fjwuRERL1yyUuWXgMR7ZmhCVaSDV4dtNaC8I1Zbngb2yePpe7J60TpwRDsYa/iT1oB464Ciezkjb3CSCU/IPUisyorOFlOTD2x6Z7AhM08M2vMGtQTa3OfgbuejspdHFNjI86Ti3ciyvIvJdEh69J/NkCUsxO7R3s/+mL6yxfiyU3M76btydOjuGd4YXwiigO9ovWmzCA3QiEY9BKApNuLag5bmRNVy1EdFUo/HQf2joLnAsOnvDusEQY1OcxXprsjFUVIJ/uVI1q//ZdhmfgaLRBsC66hW9n4Gh0Qb5uFhDysxOHY0EHF9dsoMKVhYWmSejOqbjvBQrEiGm75yPQKKSN9VZJq9HVRCW0KOH1oZTYa9oJoyiIpY0kYkEsN4KxrYnYP1XbL89neWN3OZROVu7n5p/pSNb3spjTJCg+HXYQ0Td5cLatSaUtPBum81MAJjAv8N72YArwXG4dnWmmxSBGWj8S6ozakmXnWThFFXd817dGzrbqtasjXEFM5EgTW83ptv35nzpHyRy5QWuMmNAfyoRYudSKdUk0T/UTNYZltv7M1NsWJEx/q9N3A4A4w/FOLNWT9YnHRrWhEi6sSQjam7X2d2j/UAgHT8+0vCY8uV76d+FZtQil+X8a6gMnCkJkwySUQI3MfV+LtlfTV6f4MEAE3VpIVqM=
    on_success: never
    on_failure: always

dist: bionic
language: csharp
mono: none
dotnet: 5.0
services:
  - docker

branches:
  only:
  - master
  - develop
  - andrii/169-FOR-TEST-ONLY-Security_-_WebApp_to_validate_context_on_response
  - /^release\/([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*$/

env:
  global:
    - secure: AMLcgd4W7YkWntUq9dYJgVyIlLeUh5s8p8KK+oiJGDSoU45nTC48t6tMhtayPyllEkYBNL4MxlFMRw4BVJgTL9vExuWgRJBdPBKDJUrKpSuZv5s5FQ5vN2ofN0P6j9dGEJVHSesyfnQQij1I6zzYLGgujA2x5E6xmx0t3W9zrfVJx8vPq8nkBqt8xUbTOFjLVEQJMVUeA/sQtjL7PoZhA7SlXma+G0eobWZrLntWcggO1VQuJuexJZqsoL3/WTYCbMqeOJXX4UD7lRaDCn+dVQFGF9nUmsEQi46a7GSnaGhZt2RpBKCyNRchVVSVvtRs/q+oXGqFGE2nUDs1Oj/jpJ52ywMdlLSTjHPNZ8cDPtvQoYenhMpHw6MT+GQ9nHBir/oAYQWkU+4ddnYTzh7u7wdk4HIcs7iOye6+xhAorjVjrJ+nVlCVbIhQniag4ejn6WlXnxpZUTNZsIg3PBdQWv87zLDZANXPtVFMSkD2DtqzxuAvoxpkbGBDhc2UN39CWbu0gfYixyCHEdjA6jX1g8ndeMZmUFiz3GtJwz8Fb1VSBiqJ2TUvwacdSnefajnj3UGROJP/L0zP0fegZY5vUVQwX4Zxz72GweLdNq1ZZJuV1KCqr9OldetkyndCMOgfJuiv+OFQeGvB3OZJo7+kJJDFVfxXN1Rv/FJJ4wdBUzQ=

jobs:
  include:
    - if: branch=master
      env:
        ENV=staging
    - if: branch=andrii/169-FOR-TEST-ONLY-Security_-_WebApp_to_validate_context_on_response
      env:
        ENV=dev
    - if: branch =~ ^release\/([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*$
      env:
        ENV=prod

script:
  - bash scripts/set-build-num.sh $TRAVIS_BUILD_NUMBER
  - dotnet test /p:CollectCoverage=true /p:Threshold=20
  - docker build -f gigya-server.Dockerfile -t ownid-server-gigya:latest . --network=host
  - docker build -f webapp-server.Dockerfile -t ownid-server-webapp:latest . --network=host


before_deploy:
  - pyenv install 3.6.3
  - pyenv global 3.6.3
  - pip install -U pip
  - pip install awscli
  - aws --version
  - sudo apt-get install libxml2-utils
  - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv kubectl /usr/local/bin
  - kubectl version --short --client
  - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
  - chmod +x ./kustomize
  - sudo mv kustomize /usr/local/bin
  - docker login -u $ARTIFACTORY_USERNAME -p $ARTIFACTORY_PASSWORD $ARTIFACTORY_URL

deploy:
- provider: script
  script: bash scripts/deploy/not-prod.sh $ENV
  skip_cleanup: true
  on:
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(develop|master|andrii\/169-FOR-TEST-ONLY-Security_-_WebApp_to_validate_context_on_response)$
- provider: script
  script: bash scripts/deploy/prod.sh
  skip_cleanup: true
  on:
    all_branches: true
    condition: $TRAVIS_BRANCH =~ ^release\/.*$



